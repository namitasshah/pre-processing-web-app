# AUTOGENERATED! DO NOT EDIT! File to edit: ../create_objects.ipynb.

# %% auto 0
__all__ = ['df', 'publication_list', 'author_list', 'num_no_authors', 'num_no_publication', 'Publication', 'add_author_in_list']

# %% ../create_objects.ipynb 2
from .process_names import load_data, get_author_names_list, extract_names
from .author import Author
import pandas as pd

# %% ../create_objects.ipynb 4
df = load_data(small=False) # small=True if you only want the first 5 entries
df.head()

# %% ../create_objects.ipynb 6
class Publication:
    def __init__(self, id, title, doi):
        self.id = id
        self.title = title
        self.doi = doi

# %% ../create_objects.ipynb 8
# if author with same name is in list, combine their info
# else if author is not in list, append it to the list

def add_author_in_list(author_list, new_author):
    
    for existing_author in author_list:
        if new_author == existing_author:
            pass
            # combine info from each
            existing_author.merge_names(new_author)
            # combine emails
            existing_author.add_contact_author_info(new_author)
            # publications
            for publication in new_author.publications:
                existing_author.publications.append(publication)
            return
    # add new_author to list
    author_list.append(new_author)

# %% ../create_objects.ipynb 16
publication_list = []
author_list = []

# %% ../create_objects.ipynb 18
num_no_authors = 0
num_no_publication = 0

# %% ../create_objects.ipynb 20
for index, row in df.iterrows():
    
    # If title or contact_email exists
    if (row['title'] or row['doi']):
        author_row_list = [] #List of authors in each publication; author Object
        # create a new publication object
        publication = Publication(id=row['id'], title=row['title'], doi=row['doi'])
        # add the publication to the list
        publication_list.append(publication)

     
        author_names = row['author_names']
        
        if pd.isna(author_names) or (len(author_names) == 0) or (author_names).strip('[\'] ') == '':
            author_exists = False
        else:
            author_exists = True
            author_names_list = get_author_names_list(author_names)
            for author_name in author_names_list:
                last_name, first_name, middle_name1, middle_name2, middle_name3 = extract_names(author_name)
                # Create an Author object
                author = Author(last_name, first_name, middle_name1)
                # Add the publication to the Author's list of publications
                author.publications.append(publication) ##TO DO: Check if contact_author ends up having a pub
                author_row_list.append(author)

        # Create contact author
        contact_name = row["contact_author_name"]
        
        if pd.isna(contact_name) or (len(contact_name) == 0) or (contact_name.strip() == ''):
            contact_exists = False
        else: #Contact exists = no contact name
            contact_exists = True
            contact_last, contact_first, contact_middle, _, _ = extract_names(contact_name)
            contact_author = Author(contact_last, contact_first, contact_middle, emails=[row["contact_email"]]) 
            
        
        # If there is no value in author names and contact name, then add to no_authors count
        if not author_exists and not contact_exists:
            num_no_authors = num_no_authors + 1
        elif not author_exists: #No author exists
            add_author_in_list(author_list, contact_author)            
        elif not contact_exists: #No contact exists
            for author in author_row_list:
                # Add the Author to the list of Authors
                add_author_in_list(author_list, author)
        elif author_exists and contact_exists: #Both author and contact exist
             # If that author is also the contact author, add an email
            for author in author_row_list:
                if (author == contact_author):
                   # print("True", author)
                    author.add_contact_author_info(contact_author)
                add_author_in_list(author_list, author)

    else:
        # If there is no title or contact_email, skip this entry (do not add to lists)
        num_no_publication = num_no_publication + 1
